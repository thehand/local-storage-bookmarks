"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var LocalStorageBookmarks=function(){function LocalStorageBookmarks(debug){_classCallCheck(this,LocalStorageBookmarks);this.debug=debug;this.currentStorage=localStorage;this.currentBookmarks=this.getList();if(this.currentBookmarks===null){this.log("No bookmarks container found");this.currentBookmarks=[];this.saveBookmarks();this.log("Empty bookmarks container created into the local storage")}else{this.log("Found bookmarks container");this.log(this.currentBookmarks)}}_createClass(LocalStorageBookmarks,[{key:"add",value:function add(bookmark){var currentBookmarks=this.getList();var bookmarkPos=currentBookmarks.indexOf(bookmark.toString());if(bookmarkPos==-1){this.currentBookmarks.push(bookmark);this.saveBookmarks();this.log("Bookmark successfully saved: "+bookmark)}else{this.log("Bookmark already exists")}}},{key:"remove",value:function remove(bookmark){var currentBookmarks=this.getList();var bookmarkPos=currentBookmarks.indexOf(bookmark.toString());if(bookmarkPos!=-1){this.currentBookmarks.splice(bookmarkPos,1);this.saveBookmarks();this.log("Bookmark successfully removed: "+bookmark)}else{this.log("Bookmark not exists")}}},{key:"getList",value:function getList(){var currentBookmarks=this.currentStorage.getItem("local-storage-bookmarks");if(typeof currentBookmarks==="string")return currentBookmarks.split(",");return null}},{key:"isBookmarked",value:function isBookmarked(bookmark){var currentBookmarks=this.getList();return currentBookmarks.indexOf(bookmark.toString())!=-1}},{key:"reset",value:function reset(){this.log("Clearing all bookmarks");this.currentBookmarks=[];this.saveBookmarks()}},{key:"saveBookmarks",value:function saveBookmarks(){this.currentStorage.setItem("local-storage-bookmarks",this.currentBookmarks)}},{key:"log",value:function log(string){if(this.debug){console.log(string)}}}]);return LocalStorageBookmarks}();